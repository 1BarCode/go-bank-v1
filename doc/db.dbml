Project go_bank_v1 {
    database_type: "PostgreSQL"
    Note: '''
    # Simple Go Bank Application
    ## This is a simple bank application that allows users to create accounts, deposit and withdraw money, and transfer money between accounts.'''
}

Table user as U {
    username varchar [pk]
    email varchar [unique, not null]
    hashed_password varchar [not null]
    first_name varchar [not null]
    last_name varchar [not null]
    password_changed_at timestamptz [not null, default: '0001-01-01 00:00:00Z']
    created_at timestamptz [not null, default: `now()`]
    updated_at timestamptz [not null, default: `now()`]
}

Table account as A {
    id uuid [pk, default: `uuid_generate_v4()`]
    owner varchar [ref: > U.username, not null]
    balance bigint [not null]
    currency varchar [not null]
    created_at timestamptz [not null, default: `now()`]
    updated_at timestamptz [not null, default: `now()`]

    Indexes {
        (owner)
        (owner, currency) [unique]
    }
}

Table entry {
    id uuid [pk, default: `uuid_generate_v4()`]
    account_id uuid [ref: > A.id, not null]
    amount bigint [not null, note: 'can be negative or positive']
    created_at timestamptz [not null, default: `now()`]
    updated_at timestamptz [not null, default: `now()`]

    Indexes {
        (account_id)
    }
}

Table transfer {
    id uuid [pk, default: `uuid_generate_v4()`]
    from_account_id uuid [ref: > A.id, not null]
    to_account_id uuid [ref: > A.id, not null]
    amount bigint [not null, note: 'MUST be positive']
    created_at timestamptz [not null, default: `now()`]
    updated_at timestamptz [not null, default: `now()`]

    Indexes {
        (from_account_id)
        (to_account_id)
        (from_account_id, to_account_id)
    }
}